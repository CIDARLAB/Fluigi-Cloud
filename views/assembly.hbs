<!doctype html>
<html>
<head>
    {{> favicon}}
  <title>{{title}}</title>

  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>


    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">
    <link href="../stylesheets/metisMenu.min.css" rel="stylesheet">
    <link href="../stylesheets/timeline.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="http://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css"/>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/2.1.3/toastr.min.js"></script>
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
    <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
    <script src="../javascripts/common/knockout-3.4.2.js"></script>

  <style>
    body         { padding-top:0px; word-wrap:break-word; font-size: 15px!important; }
  </style>

    <script type="text/javascript">
        $(document).ready(function(){
            localStorage.Email = document.getElementById('userEmail').getAttribute("email")
        });

    </script>
</head>
<body>
{{>topBar}}

<div class="navbar navbar-default sidebar" style="float: left; clear: both; position: fixed; height: 100%; width: 150px;  padding-left: 20px; border: none;">
    <br>
    <p>Jump to Page</p>
    <ul class="nav " id="links">
        <li>
            <a href="../profile"><i class="fa fa-user"></i> Dashboard </a>
        </li>
        <li>
            <a href="../specify"><i class="fa fa-pencil-square-o  fa-fw"></i> Editor </a>
        </li>

        <li>
            <a href="../assembly"><i class="fa fa-briefcase" aria-hidden="true"></i> Build</a>
        </li>
        <li>
            <a href="../control"><i class="fa fa-bars" aria-hidden="true"></i> Control</a>
        </li>

    </ul>
</div><!--/left-->

<div class="container " style="float: left; padding-left: 200px;">
    <br>

  <div class="row">
    <div class="text-left">
      <!--<div class="well">-->
        <h3><span class="fa fa-briefcase"></span> Build </h3>
        <br><br>
      <!--</div>-->
    </div>
  </div>

  <!--Projects  -->
    <div class="row">
        <h2 id="sec0">Set up the Microfluidic Device</h2>

        <p>
            The video below teaches the user how to mill a microfluidic chip with the svg design file that they have just created.
            The process involves preparing the polycarbonate, setting up design files in Otherplan, and the milling setup.
            For the purposes of our milling, we used the Otherplan machine.
            For further information, please refer to the <a href="http://2017.igem.org/wiki/images/2/25/UF101_Milling_Protocol.pdf">instruction manual.</a>
            <br><br>
        </p>
        <div style="text-align: center;">
            <iframe width="854" height="480" src="http://2017.igem.org/wiki/images/3/34/MARS_MillingVidFINAL.mp4" frameborder="0"
                    allowfullscreen></iframe>
        </div>
        <br>

        <p>
            The next step would be to manufacture PDMS in the lab, and how to properly cut it down to size for a microfluidic chip.
            To prepare the elastomer mix, a silicone elastomer curing agent and silicone elastomer base is required.
            The mix is placed into a desiccator to remove all the bubbles.
            The final step is to cook and prepare the PDMS using an oven.
            Once the PDMS has been prepared, it can be cut to the appropriate size for use.
            For further information, please refer to the <a href="http://2017.igem.org/wiki/images/3/3b/UF101_PDMS_Protocol.pdf">instruction manual.</a><br><br><br>
        </p>
        <div style="text-align: center;">
            <iframe width="854" height="480" src="http://2017.igem.org/wiki/images/e/ef/MARS_PDMSVid.mp4" frameborder="0"
                    allowfullscreen></iframe>
        </div>
        <br>
        <p>
            Assembling the chip requires the user to properly clean the chip and create ports, as seen in the video below.
            The ports are created by tapping the chip using a tapping tool, and screwing on the ports.
            These ports are essential for the control layer of the chip. The flow layer is prepared using PEEK tubing and epoxy.
            Once the control layer, flow layer, and PDMS layer have been prepared, all components can be assembled together with binder clips.
            The chip can then be placed inside a desiccator to create a vacuum and seal the chip.
            For further information, please refer to the <a href="http://2017.igem.org/wiki/images/d/da/UF101_Assembly_Protocol.pdf">instruction manual.</a>
            <br><br><br>
        </p>
        <div style="text-align: center;">
            <iframe width="854" height="480" src="http://2017.igem.org/wiki/images/0/03/MARS_AssemblyVid.mp4" frameborder="0"
                    allowfullscreen></iframe>
        </div>
        <p>
            Last, the video below provides a method to correctly deconstruct and clean all components of the chip in case of re-use.
            The protocol presented ensures that there are no residues from the previous experiment conducted on the chip.
            For chips that have been used with dye, the protocol is less thorough than those that have been used
            to perform biology. For the latter case,  bleach and ethanol solution are required.
            Once all the components have been cleaned, they must be stored in a clean, airtight container.
            For further information, please refer to the <a href="http://2017.igem.org/wiki/images/2/2a/UF101_Cleaning_Protocol.pdf">instruction manual.</a>
            <br><br><br>
        </p>
        <div style="text-align: center;">
            <iframe width="854" height="480" src="http://2017.igem.org/wiki/images/3/3c/MARS_CleaningVid.mp4" frameborder="0"
                    allowfullscreen></iframe>
        </div>
        <hr>

        <h2 id="sec1">Create the Hardware Setup</h2>
        <p> 3D print all the parts provided to you. To do so, simply drag and drop the .stl files
            into your 3D printer program.
            The configuration file specific to the Ultimaker 2 is available
            <a href="https://github.com/CIDARLAB/Neptune-Hardware/blob/master/Syringe%20Pump/Mechanical/ABS_iGEM.ini">here.</a>
            Cura for the Ultimaker will place the object on the 3D printing bed.
            The user can adjust the location of the object to be printed, and select the density of
            material.
            Then, you would simply need to send the job to the machine by printing to it.
            Objects to be printed include the piston arm, servo holder, syringe attachment, and syringe
            holder available </p> <a href="https://github.com/CIDARLAB/Neptune-Hardware/tree/master/Syringe%20Pump/Mechanical">here.</a>
        <p> The quantities of each depend on how many setups you have.</p>
        <p> Next, CNC mill the microfluidic chip by dragging and dropping the .svg file into the mill
            program. You will need to mill out both the control layer and the flow layer.
            The Otherplan requires a material and tool configuration. Set the material size and the
            thickness on the software, and send the job to the OtherMill.
            You should use a small endmill to carve out the small valves within your microfluidic chip.
            After milling out the chip, mill out the MEC base board to place the setup on. The files are
            available on Github
            <a href="https://github.com/CIDARLAB/Neptune-Hardware/tree/master/Mounting%20Board">here.</a>
        </p>
        <p>
            To assemble the entire structure, Neptune uses an MEC board which is a new emerging standard in
            microfluidics. The pre-drilled holes ensure proper component alignment and spacing, further
            adding to Neptuneâ€™s ease-of-use.
            The entire servo-syringe setup will be mounted onto the MEC board. Neptune uses a piston-rod
            concept to control the mechanical motion of the servos.
            <br><br><br>
        </p>
        <br><br>

        <hr>

        <h2 id="sec2"> Upload the Firmware to Control the Device </h2>
        <p>
            We now need to set up the arduino. Place the arduino shield on top of the arduino and connect
            the servos to the arduino based on the <a href="../control">Control page</a> of Neptune.
            Then, upload the following <a
                href="https://github.com/CIDARLAB/Neptune-Hardware/tree/master/Syringe%20Pump/Firmware">firmware </a>to
            the arduino so that it can start receiving commands and control the syringes accordingly.

        </p>
        <p>
            Also, in the settings popup of the same page,
            Neptune will provide you with pin numbers that correspond to where you should connect the servos
            on the arduino board.
            Each servo controls a specific valve on the microfluidic chip, and to control the valve, it
            needs to be connected to the right pin on the arduino.
            Currently implemented, this firmware has the capability to work with both digital and analog
            servos, up to 13 servo shields stacked on top of the Arduino Mega (enabling the control of over
            200 servos at once), control valves with instant motion, and control dispensers with variable
            flow-rates.
            <br><br><br>
        </p>

        <hr>


        <h2 id="sec3">Control the Experiment</h2>
        <p>
            Now, proceed to the 'Control' page of Neptune and click on buttons to open and close valves to
            push liquids through the microfluidic chip
            <br><br><br>
        </p>
        <div style="text-align: center;">
            <iframe width="854" height="480" src="https://www.youtube.com/embed/WO4xAA6XlrY?rel=0" frameborder="0"
                    allowfullscreen></iframe>
        </div>
        <br><br>
        <hr>

    </div>

</div>
</body>

{{>newWorkspace}}


</html>
